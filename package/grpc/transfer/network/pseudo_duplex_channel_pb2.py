# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ot/network/pseudo_duplex_channel.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&ot/network/pseudo_duplex_channel.proto\x12\not.network\"\x07\n\x05\x45mpty\"\x15\n\x05\x42ytes\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"\\\n\x07Message\x12\"\n\x05\x65mpty\x18\x01 \x01(\x0b\x32\x11.ot.network.EmptyH\x00\x12\"\n\x05\x62ytes\x18\x02 \x01(\x0b\x32\x11.ot.network.BytesH\x00\x42\t\n\x07\x63ontent2u\n\x13PseudoDuplexChannel\x12.\n\x04recv\x12\x11.ot.network.Empty\x1a\x13.ot.network.Message\x12.\n\x04send\x12\x13.ot.network.Message\x1a\x11.ot.network.Emptyb\x06proto3')



_EMPTY = DESCRIPTOR.message_types_by_name['Empty']
_BYTES = DESCRIPTOR.message_types_by_name['Bytes']
_MESSAGE = DESCRIPTOR.message_types_by_name['Message']
Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'ot.network.pseudo_duplex_channel_pb2'
  # @@protoc_insertion_point(class_scope:ot.network.Empty)
  })
_sym_db.RegisterMessage(Empty)

Bytes = _reflection.GeneratedProtocolMessageType('Bytes', (_message.Message,), {
  'DESCRIPTOR' : _BYTES,
  '__module__' : 'ot.network.pseudo_duplex_channel_pb2'
  # @@protoc_insertion_point(class_scope:ot.network.Bytes)
  })
_sym_db.RegisterMessage(Bytes)

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGE,
  '__module__' : 'ot.network.pseudo_duplex_channel_pb2'
  # @@protoc_insertion_point(class_scope:ot.network.Message)
  })
_sym_db.RegisterMessage(Message)

_PSEUDODUPLEXCHANNEL = DESCRIPTOR.services_by_name['PseudoDuplexChannel']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _EMPTY._serialized_start=54
  _EMPTY._serialized_end=61
  _BYTES._serialized_start=63
  _BYTES._serialized_end=84
  _MESSAGE._serialized_start=86
  _MESSAGE._serialized_end=178
  _PSEUDODUPLEXCHANNEL._serialized_start=180
  _PSEUDODUPLEXCHANNEL._serialized_end=297
# @@protoc_insertion_point(module_scope)
