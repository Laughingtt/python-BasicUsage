# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from network import pseudo_duplex_channel_pb2 as ot_dot_network_dot_pseudo__duplex__channel__pb2


class PseudoDuplexChannelStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.recv = channel.unary_unary(
                '/ot.network.PseudoDuplexChannel/recv',
                request_serializer=ot_dot_network_dot_pseudo__duplex__channel__pb2.Empty.SerializeToString,
                response_deserializer=ot_dot_network_dot_pseudo__duplex__channel__pb2.Message.FromString,
                )
        self.send = channel.unary_unary(
                '/ot.network.PseudoDuplexChannel/send',
                request_serializer=ot_dot_network_dot_pseudo__duplex__channel__pb2.Message.SerializeToString,
                response_deserializer=ot_dot_network_dot_pseudo__duplex__channel__pb2.Empty.FromString,
                )


class PseudoDuplexChannelServicer(object):
    """Missing associated documentation comment in .proto file."""

    def recv(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PseudoDuplexChannelServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'recv': grpc.unary_unary_rpc_method_handler(
                    servicer.recv,
                    request_deserializer=ot_dot_network_dot_pseudo__duplex__channel__pb2.Empty.FromString,
                    response_serializer=ot_dot_network_dot_pseudo__duplex__channel__pb2.Message.SerializeToString,
            ),
            'send': grpc.unary_unary_rpc_method_handler(
                    servicer.send,
                    request_deserializer=ot_dot_network_dot_pseudo__duplex__channel__pb2.Message.FromString,
                    response_serializer=ot_dot_network_dot_pseudo__duplex__channel__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ot.network.PseudoDuplexChannel', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PseudoDuplexChannel(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def recv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ot.network.PseudoDuplexChannel/recv',
            ot_dot_network_dot_pseudo__duplex__channel__pb2.Empty.SerializeToString,
            ot_dot_network_dot_pseudo__duplex__channel__pb2.Message.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ot.network.PseudoDuplexChannel/send',
            ot_dot_network_dot_pseudo__duplex__channel__pb2.Message.SerializeToString,
            ot_dot_network_dot_pseudo__duplex__channel__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
